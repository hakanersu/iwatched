FROM composer:1.10 as vendor

COPY composer.json composer.json
COPY composer.lock composer.lock

COPY database/ database/

RUN composer install \
    --ignore-platform-reqs \
    --no-interaction \
    --no-plugins \
    --no-scripts \
    --prefer-dist


FROM node:latest as yarn

RUN mkdir -p /app/public
COPY *.json *.yarn *.js /app/
COPY resources /app/resources

WORKDIR /app

RUN yarn install && yarn prod

FROM php:7.4-fpm

LABEL maintainer="hakanersu@gmail.com"

# Installing dependencies
RUN apt-get update --allow-releaseinfo-change && apt-get install -y --no-install-recommends \
    build-essential \
    libpng-dev \
    libpq-dev \
    libonig-dev \
    libzip-dev \
    locales \
    zip \
    nginx

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Installing extensions
RUN pecl install -o -f redis && docker-php-ext-enable redis
RUN docker-php-ext-install pdo_pgsql mbstring zip exif pcntl bcmath opcache

# Changing Workdir
WORKDIR /var/www
COPY --from=vendor /app/vendor/ /var/www/vendor/

COPY --from=yarn /app/public/dist/ /var/www/public/dist/
COPY --from=yarn /app/public/mix-manifest.json /var/www/public/mix-manifest.json

COPY . /var/www
COPY .cloud/nginx/nginx.conf.prod /etc/nginx/sites-enabled/default
COPY .cloud/scripts/entrypoint.sh /etc/entrypoint.sh

RUN mkdir -p storage/framework/sessions
RUN mkdir -p storage/framework/views
RUN mkdir -p storage/framework/cache
RUN chown -R www-data:www-data /var/www
RUN chmod +x /etc/entrypoint.sh

ENTRYPOINT ["sh", "/etc/entrypoint.sh"]
